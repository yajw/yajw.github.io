{"pageProps":{"post":{"title":" MyRocks 非正式压测","comments":true,"date":"2021-01-21T00:00:00.000Z","tags":["压测","rocksdb","MyRocks"],"categories":["实用"],"modifyTime":"2021-03-27 14:49:15 +0800","createTime":"2021-03-27 14:49:15 +0800","logs":[{"status":["A"],"files":["\"2021-03-27 MyRocks \\351\\235\\236\\346\\255\\243\\345\\274\\217\\345\\216\\213\\346\\265\\213.md\""],"abbrevHash":"f4f4061","hash":"f4f406175bde5279c552d8bac1c05cf7bb72d58e","subject":"Copy old posts","authorName":"yajw","authorDate":"2021-03-27 14:49:15 +0800"}],"link":"2021-03-27%20MyRocks%20%E9%9D%9E%E6%AD%A3%E5%BC%8F%E5%8E%8B%E6%B5%8B","id":"8ec8a9ca-6790-4c8c-b986-7cc9adabc2ca","content":"<p>“非正式”：开发环境有个docker容器要过期了，刚好对MyRocks和MySQL性能对比感兴趣，就拿来简单不专业地测下，仅对比下同样环境下两个版本的结果，测试工具是sysbench，场景是olap_read_write.lua。</p>\n<p>简单的压测发现，同样配置下，MyRocks包括读写、事务的性能是MySQL的3倍。</p>\n<p>percona官方的一个性能对比：<a href=\"https://www.percona.com/blog/2018/04/30/a-look-at-myrocks-performance/\">MyRocks Performance</a></p>\n<h1>1. 配置</h1>\n<p>机器配置：<code>32core,32GB,ubuntu 16.04,docker容器</code>\nsysbench: <code>sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)</code></p>\n<p>my.cnf:</p>\n<pre><code>[mysqld]\nbind-address    = 0.0.0.0\n# SAFETY #\nmax_allowed_packet             = 16M\nmax_connect_errors             = 1000000\ninnodb                         = FORCE\n# BINARY LOGGING #\nlog_bin                        = /var/lib/mysql/mysql-bin\nexpire_logs_days               = 14\nsync_binlog                    = 100000\nserver-id  = 1\nopen_files_limit               = 65535\nmax_connections = 10000\ninnodb_buffer_pool_size        = 26G\n# LOGGING #\nlog_error                      = /var/lib/mysql/mysql-error.log\nlog_queries_not_using_indexes  = 1\nslow_query_log                 = 1\nslow_query_log_file            = /var/lib/mysql/mysql-slow.log\n# query_response_time_stats = on\n# innodb_monitor_enable = all\ninnodb_log_buffer_size          = 512M\ninnodb_log_file_size            = 1024M\ninnodb_flush_log_at_trx_commit = 0\nsync_binlog = 100000\ninnodb_write_io_threads=16\ninnodb_read_io_threads=16\ninnodb_flush_method=O_DIRECT\n</code></pre>\n<h2>1.1 MySQL</h2>\n<p>版本：<code>mysql  Ver 14.14 Distrib 5.7.31-34, for debian-linux-gnu (x86_64) using  6.3</code></p>\n<p>percona server 5.7</p>\n<h2>1.2 MyRocks</h2>\n<p>安装：<a href=\"https://www.percona.com/doc/percona-server/5.7/myrocks/install.html\">Percona MyRocks 5.7</a></p>\n<pre><code>sudo apt-get install -y wget gnupg2 lsb-release curl\nwget https://repo.percona.com/apt/percona-release_latest.generic_all.deb\nsudo dpkg -i percona-release_latest.generic_all.deb\nsudo apt-get install --fix-broken\nsudo percona-release setup ps80\nsudo apt-get update\nsudo apt-get install percona-server-rocksdb-5.7\n</code></pre>\n<p>版本: <code>mysql  Ver 14.14 Distrib 5.7.32-35, for debian-linux-gnu (x86_64) using  6.3</code></p>\n<h1>2. 测试 oltp_read_write.lua</h1>\n<h2>2.1 prepare</h2>\n<p>首先创建test db，然后执行：</p>\n<pre><code>sysbench /usr/share/sysbench/oltp_read_write.lua --threads=32 --mysql-host=127.0.0.1 --mysql-db=test --tables=20 --table_size=1000000 --mysql-user=root --mysql-password=passw0rd prepare\n</code></pre>\n<h2>2.2 run</h2>\n<pre><code>sysbench /usr/share/sysbench/oltp_read_write.lua --threads=32 --mysql-host=127.0.0.1 --mysql-db=test --tables=20 --table_size=1000000 --mysql-user=root --mysql-password=passw0rd run\n</code></pre>\n<h2>2.3 cleanup</h2>\n<pre><code>sysbench /usr/share/sysbench/oltp_read_write.lua --threads=32 --mysql-host=127.0.0.1 --mysql-db=test --tables=20 --table_size=1000000 --mysql-user=root --mysql-password=passw0rd cleanup\n</code></pre>\n<h1>3. 测试结果</h1>\n<h2>3.1 percona MySQL 5.7 (innodb_buffer_pool_size=26G)</h2>\n<p>oltp read write</p>\n<pre><code>sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)\n\nRunning the test with following options:\nNumber of threads: 32\nInitializing random number generator from current time\n\n\nInitializing worker threads...\n\nThreads started!\n\nSQL statistics:\n    queries performed:\n        read:                            53088\n        write:                           15168\n        other:                           7584\n        total:                           75840\n    transactions:                        3792   (374.42 per sec.)\n    queries:                             75840  (7488.42 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          10.1240s\n    total number of events:              3792\n\nLatency (ms):\n         min:                                    2.60\n         avg:                                   84.53\n         max:                                  520.82\n         95th percentile:                      186.54\n         sum:                               320521.06\n\nThreads fairness:\n    events (avg/stddev):           118.5000/7.16\n    execution time (avg/stddev):   10.0163/0.01\n</code></pre>\n<h2>3.3 MyRocks (innodb_buffer_pool_size=26G)</h2>\n<pre><code>sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)\n\nRunning the test with following options:\nNumber of threads: 32\nInitializing random number generator from current time\n\n\nInitializing worker threads...\n\nThreads started!\n\nSQL statistics:\n    queries performed:\n        read:                            135940\n        write:                           38840\n        other:                           19420\n        total:                           194200\n    transactions:                        9710   (962.99 per sec.)\n    queries:                             194200 (19259.75 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          10.0805s\n    total number of events:              9710\n\nLatency (ms):\n         min:                                    1.89\n         avg:                                   32.85\n         max:                                  345.30\n         95th percentile:                       94.10\n         sum:                               318990.98\n\nThreads fairness:\n    events (avg/stddev):           303.4375/49.73\n    execution time (avg/stddev):   9.9685/0.03\n</code></pre>\n<h2>3.3 MyRocks (innodb_buffer_pool_size=4G)</h2>\n<pre><code>sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)\n\nRunning the test with following options:\nNumber of threads: 32\nInitializing random number generator from current time\n\n\nInitializing worker threads...\n\nThreads started!\n\nSQL statistics:\n    queries performed:\n        read:                            140994\n        write:                           40284\n        other:                           20142\n        total:                           201420\n    transactions:                        10071  (1001.71 per sec.)\n    queries:                             201420 (20034.23 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          10.0523s\n    total number of events:              10071\n\nLatency (ms):\n         min:                                    1.80\n         avg:                                   31.67\n         max:                                  332.13\n         95th percentile:                       90.78\n         sum:                               318995.75\n\nThreads fairness:\n    events (avg/stddev):           314.7188/71.47\n    execution time (avg/stddev):   9.9686/0.02\n</code></pre>\n<h2>3.4 MyRocks (innodb_buffer_pool_size=16G)</h2>\n<pre><code>sysbench 1.0.20 (using bundled LuaJIT 2.1.0-beta2)\n\nRunning the test with following options:\nNumber of threads: 32\nInitializing random number generator from current time\n\n\nInitializing worker threads...\n\nThreads started!\n\nSQL statistics:\n    queries performed:\n        read:                            165508\n        write:                           47288\n        other:                           23644\n        total:                           236440\n    transactions:                        11822  (1173.39 per sec.)\n    queries:                             236440 (23467.75 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          10.0721s\n    total number of events:              11822\n\nLatency (ms):\n         min:                                    1.83\n         avg:                                   26.81\n         max:                                  687.19\n         95th percentile:                       71.83\n         sum:                               316940.56\n\nThreads fairness:\n    events (avg/stddev):           369.4375/29.95\n    execution time (avg/stddev):   9.9044/0.05\n</code></pre>\n"}},"__N_SSG":true}