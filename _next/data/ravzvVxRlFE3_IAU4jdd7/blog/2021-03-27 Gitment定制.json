{"pageProps":{"post":{"title":" Gitment定制","date":"2019-09-11T22:35:39.000Z","tags":["gitment","hexo"],"comments":true,"categories":["hexo"],"modifyTime":"2021-03-27 14:49:15 +0800","createTime":"2021-03-27 14:49:15 +0800","logs":[{"status":["A"],"files":["\"2021-03-27 Gitment\\345\\256\\232\\345\\210\\266.md\""],"abbrevHash":"f4f4061","hash":"f4f406175bde5279c552d8bac1c05cf7bb72d58e","subject":"Copy old posts","authorName":"yajw","authorDate":"2021-03-27 14:49:15 +0800"}],"link":"2021-03-27%20Gitment%E5%AE%9A%E5%88%B6","id":"9f7178e7-1641-4118-b39a-c1b970f4797e","content":"<h2>评论倒序</h2>\n<p>github issue获取comments的api不支持倒序，替换下原有获取comments的逻辑即可。\n具体是这个函数：<code>Gitment.loadComments</code>，改写代码如下：</p>\n<pre><code class=\"language-js\">{\n    key: 'loadComments',\n    value: function loadComments() {\n      var _this8 = this;\n\n      var page = arguments.length > 0 &#x26;&#x26; arguments[0] !== undefined ? arguments[0] : this.state.currentPage;\n      var reverse = true\n      return this.getIssue().then(function (issue) {\n        if (!reverse) {\n            return _utils.http.get(issue.comments_url, { page: page, per_page: _this8.perPage }, '');\n        } else {\n            var pageSize = Math.min(Math.max(_this8.perPage, 0), 50)\n\n            var total = issue.comments\n            var totalPageCount = Math.floor((total + pageSize - 1) / pageSize)\n            console.log(total, totalPageCount)\n\n            var pageNo = Math.min(Math.max(page, 0), totalPageCount)\n\n            var start = (pageNo - 1) * pageSize + 1\n            var end = Math.min(pageNo * pageSize, total)\n            \n            var inverseStart = total + 1 - end\n            var inverseEnd = total + 1 - start\n            console.log(inverseStart, inverseEnd)\n\n            var inverseStartPageNo = Math.floor((inverseStart - 1) / pageSize + 1)\n            console.log(inverseStartPageNo)\n            \n            var comments_url = issue.comments_url\n            return _utils.http.get(comments_url, {\n                    page: inverseStartPageNo, \n                    per_page: pageSize \n                }, ''\n            ).then(function(startPageComments) {\n                var comments = []\n                var preCount = (inverseStartPageNo - 1) * pageSize\n                var to =  Math.min(startPageComments.length, inverseEnd-preCount)\n                for (var i = inverseStart-1-preCount; i &#x3C; to; i++) {\n                    comments.push(startPageComments[i])\n                }\n                if (startPageComments.length &#x3C; inverseEnd-preCount) {\n                    return _utils.http.get(comments_url, { \n                            page: inverseStartPageNo+1, \n                            per_page: pageSize \n                        }, ''\n                    ).then(function(nextPageComments) {\n                        var preCount = inverseStartPageNo * pageSize\n                        for (var i = 0; i &#x3C; inverseEnd-preCount; i++) {\n                            comments.push(nextPageComments[i])\n                        }\n                        return comments\n                    });\n                } else {\n                    return comments\n                }\n            }).then(function(comments) {\n                return comments.reverse()\n            });\n        }\n      }).then(function (comments) {\n        _this8.state.comments = comments;\n        return comments;\n      });\n    }\n  },\n</code></pre>\n"}},"__N_SSG":true}